# This is a basic workflow to help you get started with Actions

name: phpunit

on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Verify MySQL connection from host
      run: |
        sudo apt-get install -y mysql-client
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e "SHOW DATABASES"
        
    - name: Init Database
      run: |
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e  'CREATE DATABASE IF NOT EXISTS drupal;'
                 
    - name: composer update
      run: composer update
     # Composer.
    - name: composer settings
      run: |
        export PATH="$HOME/.composer/vendor/bin:$PATH"
        echo $PATH  
            
    - name: clone drupal code
      run: git clone --branch 8.8.x https://git.drupalcode.org/project/drupal.git
        
    - name: drupal composer update
      run: cd drupal && composer install && composer require drush/drush && cd -
      
    - name: check drush
      run: cd drupal && vendor/drush/drush/drush status
      
    - name: copy plugin to drupal
      run: |
        mkdir -p drupal/modules/arche-gui
        for d in $(pwd)/*; do ln -s "$d" "drupal/modules/arche-gui"; done
    
    - name: check directories
      run: |
        ls -la  
        cd drupal/modules && ls -la
        cd arche-gui && ls -la
        
    # sudo service mysql start
    # mysql -uroot -proot -e "CREATE DATABASE drupal"
  
    - name: install drupal with sqlite
      run: |
        ls -la
        cd drupal && vendor/drush/drush/drush site-install standard --db-url="mysql://root:root@127.0.0.1/drupal"
        cd -

#- name: install drupal mysql db
 #     run: |        
  #      cd drupal && drush --yes site-install standard --db-url="mysql://root:root@127.0.0.1/drupal"
   #     ls -la

    - name: start web server
      run: |
        cd drupal && vendor/drush/drush/drush runserver 127.0.0.1:8080 &
        until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done  
        
    - name: test
      run: |
        mkdir -p build/logs
        ./drupal/modules/arche-gui/vendor/phpunit/phpunit/phpunit --configuration ./drupal/modules/arche-gui/phpunit.xml 
        
    - name: coveralls
      run: |
        export COVERALLS_RUN_LOCALLY=1
        export COVERALLS_REPO_TOKEN=${{ secrets.coverallsLocalToken }}
        composer require php-coveralls/php-coveralls
        php vendor/bin/php-coveralls -v    
