# This is a basic workflow to help you get started with Actions

name: phpunit

on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest    
 
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: composer update
      run: composer update
     # Composer.
    - name: composer settings
      run: |
        export PATH="$HOME/.composer/vendor/bin:$PATH"
        echo $PATH  
        
    - name: install drupal
      run:  composer create-project drupal/recommended-project drupal  
  
    - name: drupal composer update
      run: cd drupal && composer update && composer require drush/drush && composer require phpunit/phpunit && cd -
      
    - name: check drush
      run: |
        cd drupal && vendor/drush/drush/drush status && cd -
        drupal/vendor/drush/drush/drush list
    
    - name: copy sqlite db
      run: |
        mkdir -p drupal/web/sites/default/files 
        cp inst/sites/default/files/.ht.sqlite drupal/web/sites/default/files/.ht.sqlite

    #vendor/drush/drush/drush site-install standard --db-url=sqlite://sites/default/files/.ht.sqlite 
    #composer create-project drupal/recommended-project drupal  
    - name: install drupal base with sqlite
      run: |              
        cd drupal        
        vendor/drush/drush/drush site:install standard -vvv --db-url='sqlite://sites/default/files/.ht.sqlite'
        cd -
      
    - name: copy plugin to drupal
      run: |
        mkdir -p drupal/web/modules/arche-gui
        for d in $(pwd)/*; do ln -s "$d" "drupal/web/modules/arche-gui"; done
    
    - name: check directories
      run: |
        ls -la  
        cd drupal/web/modules && ls -la
        cd arche-gui && ls -la
  
    - name: start web server
      run: |
        cd drupal && vendor/drush/drush/drush runserver 127.0.0.1:8080 &
        until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done  
        
    - name: test
      run: |
        mkdir -p build/logs
        ./drupal/vendor/phpunit/phpunit/phpunit --version
        ./drupal/vendor/phpunit/phpunit/phpunit --configuration ./drupal/web/modules/arche-gui/phpunit.xml 
        
        echo "drupal/web/modules/arche dir build"
        ls ./drupal/web/modules/arche-gui/build
        echo "main build dir"
        ls ./build
        
        
    - name: coveralls
      run: |
        composer require symfony/http-kernel
        composer require symfony/process
        composer require symfony/lock
        composer require symfony/event-dispatcher
        composer fund
        export COVERALLS_RUN_LOCALLY=1
        export COVERALLS_REPO_TOKEN=${{ secrets.coverallsLocalToken }}
        composer require php-coveralls/php-coveralls
        php vendor/bin/php-coveralls -v    
